<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="world_config_path" default="$(find semantics_manager)/config/config_sim.yaml"/>
  <arg name="global" default="True"/>
  <arg name="goal_manager" default="True"/>
  <arg name="find_obj" default="True"/>
  <arg name="output" default="screen"/>

  <arg name="sim" default="True"/>
  <arg name="robot_list" default="husky1,husky2,husky3"/>
  <arg name="this_robot" default="husky1"/>
  <arg name="aerial_map_ns" default="quadrotor"/>

  <arg name="use_env_init" default="True"/>
  <!-- If not use env init, can manually set these -->
  <arg name="svg_origin_x" default="0"/>
  <arg name="svg_origin_y" default="0"/>
  <arg name="init_pos_px_x" default="-1"/>
  <arg name="init_pos_px_y" default="-1"/>
  <arg name="init_pos_px_cov" default="10"/>
  <arg name="init_pos_m_x" default="0"/>
  <arg name="init_pos_m_y" default="0"/>
  <arg name="init_pos_deg_theta" default="0"/>
  <arg name="init_pos_deg_cov" default="5"/>
  <arg name="TM_learn_trav" default="True"/>

  <!-- local planning and control -->
  <arg name="TP_max_distance_m" default="2"/> 

  <arg name="PP_consistency_cost" default="0.2"/>
  <arg name="CO_max_lin_accel" default="2"/>
  <arg name="CO_max_ang_accel" default="2"/>
  <arg name="CO_max_lin_vel" default="1.5"/>
  <arg name="CO_max_ang_vel" default="1"/>

  <arg name="G_timeout_duration_s_per_m" value="10"/>


  <group ns="$(arg this_robot)">
    <include file="$(find top_down_render)/launch/top_down_render.launch" pass_all_args="True">
      <arg name="world_config_path" value="$(arg world_config_path)"/>
      <arg name="init_param_path" value="$(find semantics_manager)/maps/dynamic_unity_urban/init_conditions.yaml" if="$(eval use_env_init)"/>
      <!-- If init_param_path is none, the passed through args will automatically get used -->
      <arg name="init_param_path" value="none" if="$(eval not use_env_init)"/>

      <arg name="output" value="log"/>
      <arg name="simulation" value="$(arg sim)"/>
    </include>

    <include file="$(find spomp)/launch/local.launch" pass_all_args="True">
      <arg name="odom_frame" value="$(arg this_robot)/odom"/>
      <arg name="planner_pano_frame" value="$(arg this_robot)/planner_pano"/>
      <arg name="body_frame" value="$(arg this_robot)/body"/>
      <arg name="control_frame" value="$(arg this_robot)/base_link"/>

      <arg name="TP_max_distance_m" value="$(arg TP_max_distance_m)"/>
      <arg name="TP_min_noise_size" default="0.1"/>
      <arg name="TP_slope_thresh" value="0.25"/>
      <arg name="TP_inflation_m" value="0.75"/>
      <arg name="PP_max_spacing_m" value="0.7"/>
      <arg name="PP_consistency_cost" value="$(arg PP_consistency_cost)"/>

      <arg name="CO_max_lin_accel" value="$(arg CO_max_lin_accel)"/>
      <arg name="CO_max_ang_accel" value="$(arg CO_max_ang_accel)"/>
      <arg name="CO_max_lin_vel" value="$(arg CO_max_lin_vel)"/>
      <arg name="CO_max_ang_vel" value="$(arg CO_max_ang_vel)"/>
  

      <arg name="output" value="screen"/>
    </include>

    <include file="$(find spomp)/launch/mapper.launch" pass_all_args="True">
      <arg name="odom_frame" value="$(arg this_robot)/odom"/>
      <arg name="map_frame" value="map"/>
      <arg name="output" value="$(arg output)"/>
    </include>

    <group if="$(arg global)">
      <include file="$(find spomp)/launch/global.launch" pass_all_args="True">
        <arg name="TM_learn_trav" value="$(arg TM_learn_trav)"/>
        <arg name="TM_no_max_terrain_in_graph" value="False"/>
        <arg name="TM_max_hole_fill_size_m" value="1"/>
        <arg name="TM_min_region_size_m" value="0"/>
        <arg name="TM_vis_dist_m" value="7"/>

        <arg name="TG_reach_node_max_dist_m" value="4"/>

        <arg name="G_timeout_duration_s_per_m" value="$(arg G_timeout_duration_s_per_m)"/>

        <arg name="world_config_path" value="$(arg world_config_path)"/>
      </include>
    </group>
    <group if="$(eval not arg('global'))">
      <node name="local_manual_input" type="relay" pkg="topic_tools" args="/move_base_simple/goal spomp_global/local_goal"/>
    </group>

    <group if="$(arg goal_manager)">
      <include file="$(find spomp)/launch/goal_manager.launch" pass_all_args="True">
        <arg name="goal_manager_min_goal_dist_m" value="15"/>
      </include>
    </group>
  </group>
</launch>
